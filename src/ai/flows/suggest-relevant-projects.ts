
// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A project suggestion AI agent.
 *
 * - suggestRelevantProjects - A function that handles the project suggestion process.
 * - SuggestRelevantProjectsInput - The input type for the suggestRelevantProjects function.
 * - SuggestRelevantProjectsOutput - The return type for the suggestRelevantProjects function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRelevantProjectsInputSchema = z.object({
  profile: z
    .string()
    .describe('The student profile, including skills, experience, and resume content.'),
});
export type SuggestRelevantProjectsInput = z.infer<typeof SuggestRelevantProjectsInputSchema>;

const SuggestRelevantProjectsOutputSchema = z.object({
  projectSuggestions: z
    .array(z.string())
    .describe('A list of 3-5 project titles tailored to the profile.'),
});
export type SuggestRelevantProjectsOutput = z.infer<typeof SuggestRelevantProjectsOutputSchema>;

export async function suggestRelevantProjects(input: SuggestRelevantProjectsInput): Promise<SuggestRelevantProjectsOutput> {
  return suggestRelevantProjectsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRelevantProjectsPrompt',
  input: {schema: SuggestRelevantProjectsInputSchema},
  output: {schema: SuggestRelevantProjectsOutputSchema},
  prompt: `You are a project suggestion expert. Based on the student's profile, you will provide a list of project suggestions.

  Profile: {{{profile}}}

  Provide a list of 3-5 project titles that are a good fit.`,
});

const suggestRelevantProjectsFlow = ai.defineFlow(
  {
    name: 'suggestRelevantProjectsFlow',
    inputSchema: SuggestRelevantProjectsInputSchema,
    outputSchema: SuggestRelevantProjectsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
